{
  "name": "Active Inference Simulation Lab",
  "image": "mcr.microsoft.com/devcontainers/python:3.11-bullseye",
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "installOhMyZsh": true,
      "upgradePackages": true,
      "username": "vscode"
    },
    "ghcr.io/devcontainers/features/git:1": {
      "version": "latest",
      "ppa": true
    },
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "version": "latest",
      "moby": true
    },
    "ghcr.io/devcontainers/features/node:1": {
      "version": "18"
    }
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.flake8",
        "ms-python.black-formatter",
        "ms-python.pylint",
        "ms-vscode.cpptools",
        "ms-vscode.cmake-tools",
        "twxs.cmake",
        "ms-python.debugpy",
        "ms-toolsai.jupyter",
        "ms-python.isort",
        "ms-python.mypy-type-checker",
        "redhat.vscode-yaml",
        "ms-vscode.test-adapter-converter",
        "ms-vsliveshare.vsliveshare",
        "GitHub.copilot",
        "GitHub.vscode-pull-request-github"
      ],
      "settings": {
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.formatting.provider": "black",
        "python.formatting.blackArgs": ["--line-length=88"],
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.linting.flake8Enabled": true,
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "python.testing.nosetestsEnabled": false,
        "files.trimTrailingWhitespace": true,
        "files.insertFinalNewline": true,
        "editor.formatOnSave": true,
        "editor.rulers": [88],
        "cmake.configureOnOpen": true,
        "C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools"
      }
    }
  },
  "postCreateCommand": "bash .devcontainer/postCreate.sh",
  "remoteUser": "vscode",
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
  ]
}