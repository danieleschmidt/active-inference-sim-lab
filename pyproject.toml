[build-system]
requires = ["setuptools>=61.0", "wheel", "pybind11>=2.10.0"]
build-backend = "setuptools.build_meta"

[project]
name = "active-inference-sim-lab"
version = "0.1.0"
description = "Lightweight toolkit for building active inference agents based on the Free Energy Principle"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Terragon Labs", email = "info@terragonlabs.com"}
]
maintainers = [
    {name = "Terragon Labs", email = "info@terragonlabs.com"}
]
keywords = ["active-inference", "free-energy-principle", "ai", "machine-learning", "reinforcement-learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "gymnasium>=0.26.0",
    "pybind11>=2.10.0",
    "tqdm>=4.64.0",
    "pyyaml>=6.0",
    "tensorboard>=2.10.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "wheel>=0.37.0",
    "build>=0.8.0",
]
mujoco = [
    "mujoco>=2.3.0",
    "dm-control>=1.0.0",
]
visualization = [
    "plotly>=5.0.0",
    "dash>=2.0.0",
    "opencv-python>=4.6.0",
]
performance = [
    "numba>=0.56.0",
    "cupy>=11.0.0",  # GPU acceleration
]
all = [
    "active-inference-sim-lab[dev,mujoco,visualization,performance]"
]

[project.urls]
Homepage = "https://github.com/terragon-labs/active-inference-sim-lab"
Documentation = "https://active-inference-sim-lab.readthedocs.io/"
Repository = "https://github.com/terragon-labs/active-inference-sim-lab"
"Bug Tracker" = "https://github.com/terragon-labs/active-inference-sim-lab/issues"
Changelog = "https://github.com/terragon-labs/active-inference-sim-lab/blob/main/CHANGELOG.md"

[project.scripts]
active-inference = "active_inference.cli:main"

[tool.setuptools.packages.find]
where = ["src/python"]
include = ["active_inference*"]

[tool.setuptools.package-data]
active_inference = ["**/*.so", "**/*.dll", "**/*.dylib"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=active_inference",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
]

[tool.coverage.run]
source = ["src/python/active_inference"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
per-file-ignores = [
    "__init__.py:F401",
]

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.bandit]
exclude_dirs = ["tests", "test_*", "*_test.py", "venv", ".venv", "build"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection for tests

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py", "tests/*"]