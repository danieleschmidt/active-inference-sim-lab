# Configuration file for the Sphinx documentation builder.
# For the full list of built-in configuration values, see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

import os
import sys
from pathlib import Path

# Add the project root to the Python path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root / "src" / "python"))

# -- Project information -----------------------------------------------------
project = 'Active Inference Simulation Lab'
copyright = '2024, Terragon Labs'
author = 'Terragon Labs'
release = '0.1.0'
version = '0.1.0'

# -- General configuration ---------------------------------------------------
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.autosummary',
    'sphinx.ext.doctest',
    'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    'sphinx.ext.coverage',
    'sphinx.ext.mathjax',
    'sphinx.ext.ifconfig',
    'sphinx.ext.viewcode',
    'sphinx.ext.githubpages',
    'sphinx.ext.napoleon',
    'myst_parser',
    'sphinx_rtd_theme',
    'sphinx.ext.autosectionlabel',
    'sphinx_copybutton',
    'sphinx_tabs.tabs',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The suffix(es) of source filenames.
source_suffix = {
    '.rst': None,
    '.md': 'myst_parser',
}

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx.
language = 'en'

# -- Options for HTML output -------------------------------------------------
html_theme = 'sphinx_rtd_theme'
html_static_path = ['_static']

# Theme options
html_theme_options = {
    'analytics_id': '',
    'analytics_anonymize_ip': False,
    'logo_only': False,
    'display_version': True,
    'prev_next_buttons_location': 'bottom',
    'style_external_links': False,
    'vcs_pageview_mode': '',
    'style_nav_header_background': '#2980B9',
    'collapse_navigation': True,
    'sticky_navigation': True,
    'navigation_depth': 4,
    'includehidden': True,
    'titles_only': False
}

# Custom CSS
html_css_files = [
    'custom.css',
]

# Custom JavaScript
html_js_files = [
    'custom.js',
]

# HTML context
html_context = {
    'display_github': True,
    'github_user': 'terragon-labs',
    'github_repo': 'active-inference-sim-lab',
    'github_version': 'main',
    'conf_py_path': '/docs/',
}

# -- Extension configuration -------------------------------------------------

# Autodoc configuration
autodoc_default_options = {
    'members': True,
    'member-order': 'bysource',
    'special-members': '__init__',
    'undoc-members': True,
    'exclude-members': '__weakref__'
}

autodoc_member_order = 'bysource'
autodoc_typehints = 'description'
autodoc_typehints_description_target = 'documented'

# Autosummary configuration
autosummary_generate = True
autosummary_generate_overwrite = True

# Napoleon configuration (for Google/NumPy style docstrings)
napoleon_google_docstring = True
napoleon_numpy_docstring = True
napoleon_include_init_with_doc = False
napoleon_include_private_with_doc = False
napoleon_include_special_with_doc = True
napoleon_use_admonition_for_examples = False
napoleon_use_admonition_for_notes = False
napoleon_use_admonition_for_references = False
napoleon_use_ivar = False
napoleon_use_param = True
napoleon_use_rtype = True
napoleon_preprocess_types = False
napoleon_type_aliases = None
napoleon_attr_annotations = True

# Intersphinx mapping
intersphinx_mapping = {
    'python': ('https://docs.python.org/3/', None),
    'numpy': ('https://numpy.org/doc/stable/', None),
    'scipy': ('https://docs.scipy.org/doc/scipy/', None),
    'matplotlib': ('https://matplotlib.org/stable/', None),
    'sklearn': ('https://scikit-learn.org/stable/', None),
    'torch': ('https://pytorch.org/docs/stable/', None),
    'gym': ('https://gymnasium.farama.org/', None),
}

# Math support
mathjax3_config = {
    'tex': {
        'inlineMath': [['$', '$'], ['\\(', '\\)']],
        'displayMath': [['$$', '$$'], ['\\[', '\\]']],
    },
}

# Todo configuration
todo_include_todos = True

# MyST configuration
myst_enable_extensions = [
    "deflist",
    "tasklist",
    "html_admonition",
    "html_image",
    "colon_fence",
    "smartquotes",
    "replacements",
    "linkify",
    "substitution",
    "attrs_inline",
    "attrs_block",
]

myst_substitutions = {
    "project": project,
    "version": version,
}

# Copy button configuration
copybutton_prompt_text = r">>> |\.\.\. |\$ |In \[\d*\]: | {2,5}\.\.\.: | {5,8}: "
copybutton_prompt_is_regexp = True

# -- Custom configuration ---------------------------------------------------

# API documentation generation
def run_apidoc(_):
    """Generate API documentation using sphinx-apidoc."""
    from sphinx.ext.apidoc import main
    import os
    import sys
    
    source_dir = os.path.join(os.path.dirname(__file__), '..', 'src', 'python')
    output_dir = os.path.join(os.path.dirname(__file__), 'api')
    
    # Remove existing API docs
    if os.path.exists(output_dir):
        import shutil
        shutil.rmtree(output_dir)
    
    # Generate new API docs
    main([
        '--force',
        '--separate',
        '--module-first',
        '--no-toc',
        '-o', output_dir,
        source_dir,
        '*/tests/*',
        '*/test_*'
    ])

def setup(app):
    """Sphinx setup hook."""
    app.connect('builder-inited', run_apidoc)

# -- Custom directives and roles --------------------------------------------

# Custom CSS for better code highlighting
def setup_custom_css(app):
    """Add custom CSS for better appearance."""
    app.add_css_file('custom.css')

# Example gallery configuration (if needed)
# from sphinx_gallery.gen_gallery import parse_config
# sphinx_gallery_conf = {
#     'examples_dirs': '../examples',
#     'gallery_dirs': 'auto_examples',
#     'filename_pattern': re.escape(os.sep) + 'plot_',
#     'ignore_pattern': '__init__\.py',
#     'mod_example_dir': os.path.join('modules', 'generated'),
#     'doc_module': ('active_inference',),
#     'reference_url': {
#         'active_inference': None,
#     }
# }

# Linkcheck configuration
linkcheck_ignore = [
    r'http://localhost:\d+/',
    r'https://github\.com/.*#.*',  # GitHub anchors
]

linkcheck_timeout = 30
linkcheck_retries = 3

# Spelling check configuration (if sphinx.ext.spelling is used)
# spelling_lang = 'en_US'
# tokenizer_lang = 'en_US'
# spelling_word_list_filename = 'spelling_wordlist.txt'